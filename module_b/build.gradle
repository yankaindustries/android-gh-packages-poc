plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id "maven-publish"
}

android {
    namespace 'com.yanka.mc.module.b'
    compileSdk 34

    defaultConfig {
        minSdk 30
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}

dependencies {
    implementation "com.yanka.mc.module:aar-poc-module-a:0.0.2"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = "com.yanka.mc.module"
                artifactId = "aar-poc-module-b"
                version = "0.0.3"
                from(components["release"])
            }
        }

        // Android Developer docs that explain how to create an android module for publishing
        // https://developer.android.com/studio/publish-library/upload-library#local-repo
        // Github docs that explain how to publish to github packages
        // https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry#example-using-gradle-groovy-for-a-single-package-in-a-repository
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/yankaindustries/android-gh-packages-poc")

                def githubUsername = System.getenv("MC_ORG_ANDROID_GH_PACKAGES_USERNAME")
                def githubToken = System.getenv("MC_ORG_ANDROID_GH_PACKAGES_TOKEN")

                if (githubUsername == null || githubToken == null) {
                    logger.lifecycle("Missing credentials for GitHub Packages. " +
                            "Ensure environment variables are set for publishing. " +
                            "This may be safely ignored for local builds.")
                    return
                }

                logger.lifecycle("GH Packages username: " + (githubUsername != null ? "PRESENT" : "NOT SET"))
                logger.lifecycle("GH Packages token: " + (githubToken != null ? "PRESENT" : "NOT SET"))
                credentials {
                    username = githubUsername
                    password = githubToken
                }
            }
        }
    }
}